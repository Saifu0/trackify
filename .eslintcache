[{"/home/saifu/Documents/Trackify/src/index.tsx":"1","/home/saifu/Documents/Trackify/src/store/store.ts":"2","/home/saifu/Documents/Trackify/src/components/Dashboard/Category/Category.tsx":"3","/home/saifu/Documents/Trackify/src/components/Dashboard/Modal/Modal.tsx":"4","/home/saifu/Documents/Trackify/src/components/Navigations/AuthenticationNavigation.tsx":"5","/home/saifu/Documents/Trackify/src/components/Home/index.tsx":"6","/home/saifu/Documents/Trackify/src/components/Dashboard/Section/Heading.tsx":"7","/home/saifu/Documents/Trackify/src/components/Home/LandingPage/LandingPage.tsx":"8","/home/saifu/Documents/Trackify/src/store/utility.ts":"9"},{"size":500,"mtime":1613448963946,"results":"10","hashOfConfig":"11"},{"size":215,"mtime":1614358566812,"results":"12","hashOfConfig":"11"},{"size":447,"mtime":1613448963942,"results":"13","hashOfConfig":"11"},{"size":4935,"mtime":1613813861437,"results":"14","hashOfConfig":"11"},{"size":1710,"mtime":1613448963946,"results":"15","hashOfConfig":"11"},{"size":234,"mtime":1613448963946,"results":"16","hashOfConfig":"11"},{"size":3440,"mtime":1613814236190,"results":"17","hashOfConfig":"11"},{"size":3299,"mtime":1614355717705,"results":"18","hashOfConfig":"11"},{"size":139,"mtime":1614357468109,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qdewc1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saifu/Documents/Trackify/src/index.tsx",[],"/home/saifu/Documents/Trackify/src/store/store.ts",[],["42","43"],"/home/saifu/Documents/Trackify/src/components/Dashboard/Category/Category.tsx",[],["44","45"],"/home/saifu/Documents/Trackify/src/components/Dashboard/Modal/Modal.tsx",["46"],"import React from 'react';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport { Form, Input, Button, DatePicker, Select, Tag } from 'antd';\n\nconst { Option } = Select;\n\ninterface Props {\n    id? : number;\n    status? : string;\n    company? : string;\n    position? : string;\n    date? : string;\n    notes? : string;\n    update? : boolean;\n}\n\nconst DumbModal = ( props : Props ) => {\n\n    const [referesh, setRefresh ] = React.useState(undefined)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 20 },\n    };\n\n    const dateFormat = 'YYYY/MM/DD';\n\n    const onFinish = (values: any) => {\n        const date = moment(values.applied_date).format(\"YYYY-MM-DD\")\n        const token = sessionStorage.getItem(\"token\");\n\n\n        const bodyParameters = {\n          company : (values.company===undefined ? props.company : values.company),\n          role : (values.position === undefined ? props.position : values.position),\n          status : (values.status===undefined ? props.status : values.status),\n          notes : (values.notes===undefined ? props.notes : values.notes),\n          applied_date : date\n        }\n\n        console.log(bodyParameters)\n\n        const config = {\n            headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' },\n        };\n        if(props.update===false){\n            axios.post('/api/create',bodyParameters,config)\n              .then(res => {\n                console.log(\"Status\",res.data);\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }else{\n            const updatedBody = {...bodyParameters, id : props.id }\n            axios.post('/api/update',updatedBody,config)\n              .then(res => {\n                console.log(\"Status\",res.data)\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }\n\n        // console.log('Success:', values);\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const onChange = (date : any, dateString : any ) =>{\n        console.log(date, dateString);\n    }\n\n    const handleChange = (value : string ) => {\n        console.log(`selected ${value}`);\n    }\n\n    return (\n        <Form\n            {...layout}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Company Name\"\n                name=\"company\"\n                rules={[{ required: !props.update, message: 'Please enter company!' }]}\n            >\n                <Input defaultValue={props.company}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Position\"\n                name=\"position\"\n                rules={[{ required: !props.update, message: 'Please enter position!' }]}\n            >\n                <Input defaultValue={props.position}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Extra Notes\"\n                name=\"notes\"\n            >\n                <Input.TextArea defaultValue={props.notes}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Date\"\n                name=\"applied_date\"\n            >\n                <DatePicker\n                    defaultValue={moment('2021/02/14',dateFormat)}\n                    onChange={onChange}\n                    format={dateFormat}\n                />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Status\"\n                name=\"status\"\n            >\n                <Select defaultValue={props.status} style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\"to apply\">\n                        <Tag color=\"gold\">\n                            To apply\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"applied\">\n                        <Tag color=\"blue\">\n                            Applied\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"ongoing\">\n                        <Tag color=\"magenta\">\n                            On going\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"rejected\">\n                        <Tag color=\"red\">\n                            Rejected\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"offer\">\n                        <Tag color=\"green\">\n                            Offer\n                        </Tag>\n                    </Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item>\n                <Button htmlType=\"submit\" onClick={() => setRefresh(undefined)}>Apply</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DumbModal\n","/home/saifu/Documents/Trackify/src/components/Navigations/AuthenticationNavigation.tsx",[],["47","48"],"/home/saifu/Documents/Trackify/src/components/Home/index.tsx",[],"/home/saifu/Documents/Trackify/src/components/Dashboard/Section/Heading.tsx",["49"],"/home/saifu/Documents/Trackify/src/components/Home/LandingPage/LandingPage.tsx",["50"],"/home/saifu/Documents/Trackify/src/store/utility.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":20,"column":12,"nodeType":"59","messageId":"60","endLine":20,"endColumn":20},{"ruleId":"51","replacedBy":"61"},{"ruleId":"53","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":110,"column":7,"nodeType":"65","endLine":110,"endColumn":9,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":16,"column":9,"nodeType":"65","endLine":16,"endColumn":11,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"@typescript-eslint/no-unused-vars","'referesh' is assigned a value but never used.","Identifier","unusedVar",["69"],["70"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.status'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [props.status]",{"range":"77","text":"78"},"Update the dependencies array to be: [history]",{"range":"79","text":"80"},[2988,2990],"[props.status]",[495,497],"[history]"]