[{"/home/pyromaniac/Desktop/projects/trackify-hidden/src/index.tsx":"1","/home/pyromaniac/Desktop/projects/trackify-hidden/src/reportWebVitals.ts":"2","/home/pyromaniac/Desktop/projects/trackify-hidden/src/App.tsx":"3","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/store.ts":"4","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Dashboard.tsx":"5","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Navbar/Navbar.tsx":"6","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Login/Login.tsx":"7","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/Contact/Contact.tsx":"8","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/About/About.tsx":"9","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/rootReducer.ts":"10","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/index.tsx":"11","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Section/Heading.tsx":"12","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Navigations/AuthenticationNavigation.tsx":"13","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/unauthenticated/unauthenticatedReducer.ts":"14","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/Authentication/AuthenticationReducer.ts":"15","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/LandingPage/LandingPage.tsx":"16","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Column/Column.tsx":"17","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Category/Category.tsx":"18","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/AddButton/AddButton.tsx":"19","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Authentication/LoginForm.tsx":"20","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Authentication/RegisterForm.tsx":"21","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/unauthenticated/unauthenticatedTypes.ts":"22","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/Authentication/AuthenticationTypes.ts":"23","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/utility.ts":"24","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Column/ColumnItem.tsx":"25","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Modal/Modal.tsx":"26"},{"size":500,"mtime":1621651901936,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1621651901936,"results":"29","hashOfConfig":"28"},{"size":1163,"mtime":1621651901928,"results":"30","hashOfConfig":"28"},{"size":215,"mtime":1621651901940,"results":"31","hashOfConfig":"28"},{"size":596,"mtime":1621651901928,"results":"32","hashOfConfig":"28"},{"size":3233,"mtime":1621651901936,"results":"33","hashOfConfig":"28"},{"size":483,"mtime":1621651901936,"results":"34","hashOfConfig":"28"},{"size":1605,"mtime":1621747088308,"results":"35","hashOfConfig":"28"},{"size":7461,"mtime":1621651901928,"results":"36","hashOfConfig":"28"},{"size":356,"mtime":1621651901940,"results":"37","hashOfConfig":"28"},{"size":220,"mtime":1621651901936,"results":"38","hashOfConfig":"28"},{"size":2026,"mtime":1621651901928,"results":"39","hashOfConfig":"28"},{"size":1710,"mtime":1621651901936,"results":"40","hashOfConfig":"28"},{"size":444,"mtime":1621651901940,"results":"41","hashOfConfig":"28"},{"size":1258,"mtime":1621651901936,"results":"42","hashOfConfig":"28"},{"size":5614,"mtime":1621651901932,"results":"43","hashOfConfig":"28"},{"size":470,"mtime":1621651901928,"results":"44","hashOfConfig":"28"},{"size":521,"mtime":1621651901928,"results":"45","hashOfConfig":"28"},{"size":1148,"mtime":1621651901928,"results":"46","hashOfConfig":"28"},{"size":2678,"mtime":1621651901928,"results":"47","hashOfConfig":"28"},{"size":3094,"mtime":1621651901928,"results":"48","hashOfConfig":"28"},{"size":67,"mtime":1621651901940,"results":"49","hashOfConfig":"28"},{"size":164,"mtime":1621651901936,"results":"50","hashOfConfig":"28"},{"size":139,"mtime":1621651901940,"results":"51","hashOfConfig":"28"},{"size":1677,"mtime":1621651901928,"results":"52","hashOfConfig":"28"},{"size":4754,"mtime":1621651901928,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"brn4sj",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"/home/pyromaniac/Desktop/projects/trackify-hidden/src/index.tsx",[],["113","114"],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/reportWebVitals.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/App.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/store.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Dashboard.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Navbar/Navbar.tsx",["115","116"],"import React, { useState } from \"react\";\nimport { Menu, Drawer, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport { UnorderedListOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport logo from \"./logo.png\";\n\nconst Navbar = () => {\n  const history = useHistory();\n\n  const Handler1 = () => {\n    history.push(\"/about\");\n  };\n  const Handler2 = () => {\n    history.push(\"/contact\");\n  };\n  const [visible, setVisible] = useState(false);\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    history.push(\"/\");\n  };\n\n  return (\n    <Layout style={{ width: \"100%\" }}>\n      <Menu\n        style={{\n          width: \"100%\",\n          position: \"fixed\",\n          zIndex: 1,\n          display: \"flex\",\n          fontFamily: \"'Cinzel', serif\",\n          height: \"10vh\",\n          alignItems: \"center\",\n          backgroundColor: \"#0D1117\",\n        }}\n        mode=\"horizontal\"\n      >\n        <Menu.Item\n          onClick={() => history.push(\"/\")}\n          key=\"mail\"\n          style={{ fontSize: \"2em\" }}\n        >\n          <img style={{ paddingRight: \".5em\" }} src={logo} alt=\"logo\"></img>\n          <b style={{}}>Trackify</b>\n        </Menu.Item>\n        <Menu.Item>\n          <UnorderedListOutlined\n            style={{ fontSize: \"2em\" }}\n            onClick={showDrawer}\n          />\n        </Menu.Item>\n      </Menu>\n      <Drawer\n        title=\"🍳\"\n        placement=\"right\"\n        closable={false}\n        onClose={onClose}\n        visible={visible}\n      >\n        <Menu style={{ backgroundColor: \"transparent\" }}>\n          <Menu.Item key=\"1\" style={{ fontSize: \"1.3em\" }} onClick={Handler1}>\n            About Us\n          </Menu.Item>\n          <Menu.Item key=\"2\" style={{ fontSize: \"1.3em\" }} onClick={Handler2}>\n            Contact US\n          </Menu.Item>\n          <Menu.Item>\n            <hr></hr>\n          </Menu.Item>\n          <Menu.ItemGroup title=\"Team\">\n            <Menu.Item key=\"3\" style={{ fontSize: \"1.3em\" }}>\n              <a\n                href={\n                  \"https://www.linkedin.com/in/saifur-rehman-khan-5770a9172/\"\n                }\n                target={\"_blank\"}\n              >\n                Saifur Rehman\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"4\" style={{ fontSize: \"1.3em\" }}>\n              <a\n                href={\"https://www.linkedin.com/in/nihal-ahmad-46042a192\"}\n                target={\"_blank\"}\n              >\n                Nihal Ahmad\n              </a>\n            </Menu.Item>\n            <Menu.Item>\n              <hr></hr>\n            </Menu.Item>\n            <Menu.Item key=\"5\" style={{ fontSize: \"1.3em\" }}>\n              {localStorage.getItem(\"token\") ? (\n                <Button type=\"ghost\" htmlType=\"submit\" onClick={handleLogout}>\n                  Logout <LogoutOutlined />\n                </Button>\n              ) : (\n                <hr />\n              )}\n            </Menu.Item>\n          </Menu.ItemGroup>\n        </Menu>\n      </Drawer>\n    </Layout>\n  );\n};\n\nexport default Navbar;\n","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Login/Login.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/Contact/Contact.tsx",["117","118"],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/About/About.tsx",["119","120","121","122","123","124","125","126","127","128","129","130"],"import React from \"react\";\nimport \"./index.css\";\nimport { Row, Col, Layout, Card } from \"antd\";\nimport nihal from \"./nihal-ahmad.jpeg\";\nimport saifur from \"./saifur-rehman.jpg\";\nimport github from \"./github-logo.svg\";\nimport linkedin from \"./linkedin.svg\";\nimport codechef from \"./codechef.jpg\";\nimport codeforces from \"./codeforces.png\";\n\nfunction About() {\n  const { Content } = Layout;\n  const { Meta } = Card;\n\n  return (\n    <>\n      <Layout\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          backgroundColor: \"#162129\",\n        }}\n      >\n        <Content\n          style={{\n            paddingTop: \"12vh\",\n            paddingRight: \".8em\",\n            paddingLeft: \".8em\",\n          }}\n        >\n          <Row\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <b\n              style={{\n                fontSize: \"1.8em\",\n                color: \"#3690CC\",\n              }}\n            >\n              👍Intro\n            </b>\n          </Row>\n          <br />\n          <Row\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Row style={{ fontSize: \"2em\" }}>\n              We went through the job application process ourselves and we were\n              not so happy about it.\n            </Row>\n          </Row>\n          <br />\n          <Row className=\"row\">\n            👀 Messy spreadsheets, lost emails, lack of information.\n          </Row>\n          <br />\n          <Row className=\"row\">\n            👀 We decided to make a job search simple and data-driven and career\n            advising efficient.\n          </Row>\n          <br />\n          <Row className=\"row\">\n            <span>\n              👀 In a nutshell,<strong className=\"bold\">Trackify</strong> as a\n              platform,simplifies and manages a student's dream to land jobs.\n            </span>\n          </Row>\n          <br />\n          <br />\n          <Row\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <b\n              style={{\n                fontSize: \"1.8em\",\n                color: \"#3690CC\",\n              }}\n            >\n              👍Our Team\n            </b>\n          </Row>\n          <br />\n          <Row\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              // alignItems: \"center\"\n            }}\n          >\n            <Col\n              xs={22}\n              sm={22}\n              lg={12}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginBottom: \"3em\",\n              }}\n            >\n              <Row>\n                <Card\n                  style={{\n                    width: 350,\n                    borderRadius: \"4em\",\n                    marginBottom: \"1em\",\n                  }}\n                  cover={\n                    <img\n                      alt=\"example\"\n                      src={nihal}\n                      style={{ borderRadius: \"4em\" }}\n                    />\n                  }\n                  hoverable={true}\n                >\n                  <Meta\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                    title=\"Nihal Ahmad | Software Developer\"\n                    description=\"I am a Software Developer, ECE student and Competitive Programmer.\n      I designed and implemented the frontend of this (Trackify) app from a Button hover to handling HTTP requests. \n      I have keen interest in software development and ready to adapt to new technologies.\n      \"\n                  />\n                </Card>\n                <Row style={{ paddingLeft: \"8em\", alignItems: \"center\" }}>\n                  <span style={{ marginRight: \"1em\" }}>\n                    <a\n                      href={\"https://github.com/nihal-ahmad\"}\n                      target={\"_blank\"}\n                    >\n                      <img src={github} className=\"img\" />\n                    </a>\n                  </span>\n                  <span style={{ marginRight: \"1em\" }}>\n                    <a\n                      href={\"https://www.linkedin.com/in/nihal-ahmad-46042a192\"}\n                      target={\"_blank\"}\n                    >\n                      <img src={linkedin} className=\"img\" />\n                    </a>\n                  </span>\n                  <span style={{ marginRight: \"1em\" }}>\n                    <a\n                      href={\"https://www.codechef.com/users/pyromaniac007\"}\n                      target={\"_blank\"}\n                    >\n                      <img src={codechef} className=\"img\" />\n                    </a>\n                  </span>\n                </Row>\n              </Row>\n            </Col>\n            <Col\n              xs={22}\n              sm={22}\n              lg={12}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginBottom: \"3em\",\n              }}\n            >\n              <Row>\n                <Card\n                  style={{\n                    width: 350,\n                    borderRadius: \"4em\",\n                    marginBottom: \"1em\",\n                  }}\n                  cover={\n                    <img\n                      alt=\"example\"\n                      src={saifur}\n                      style={{ borderRadius: \"4em\" }}\n                    />\n                  }\n                  hoverable={true}\n                >\n                  <Meta\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                    title=\"Saifur Rahman | Full Stack Developer\"\n                    description=\"I'm a Full Stack Developer, CS student and Competitive Programmer. I designed and implemented the backend of this (Trackify) app including Authentication, Database Design, Deployment, etc.\n                    Interested in Backend Architecture and designing scablable systems.\"\n                  />\n                </Card>\n                <Row style={{ paddingLeft: \"8em\", alignItems: \"center\" }}>\n                  <span style={{ marginRight: \"1em\" }}>\n                    <a href={\"https://github.com/Saifu0\"} target={\"_blank\"}>\n                      <img src={github} className=\"img\" />\n                    </a>\n                  </span>\n                  <span style={{ marginRight: \"1em\" }}>\n                    <a\n                      href={\n                        \"https://www.linkedin.com/in/saifur-rehman-khan-5770a9172/\"\n                      }\n                      target={\"_blank\"}\n                    >\n                      <img src={linkedin} className=\"img\" />\n                    </a>\n                  </span>\n                  <span style={{ marginRight: \"1em\" }}>\n                    <a\n                      href={\"https://codeforces.com/profile/.Pain.\"}\n                      target={\"_blank\"}\n                    >\n                      <img src={codeforces} className=\"img\" />\n                    </a>\n                  </span>\n                </Row>\n              </Row>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    </>\n  );\n}\n\nexport default About;\n","/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/rootReducer.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/index.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Section/Heading.tsx",["131","132"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Col, Button } from \"antd\";\nimport Column from \"../Column/Column\";\nimport Category from \"../Category/Category\";\nimport AddButton from \"../AddButton/AddButton\";\n\ninterface Props {\n  color: string;\n  text: string;\n  status: string;\n}\nfunction Heading(props: Props) {\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    axios\n      .get(`/api/${props.status}`, config)\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }, []);\n  const [hover, setHover] = useState(false);\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n  let linkStyle;\n  if (hover) {\n    linkStyle = { transform: \"scale(1.3,1.3)\" };\n  } else linkStyle = { transform: \"scale(1,1)\" };\n  return (\n    <Col\n      span={\"20%\"}\n      style={{ height: \"88vh\", alignItems: \"center\", marginTop: \"12vh\" }}\n    >\n      <Category color={props.color} text={props.text} />\n      <Col\n        style={{\n          overflowY: \"auto\",\n          overflowX: \"hidden\",\n          height: \"82vh\",\n          maxHeight: \"82vh\",\n          position: \"relative\",\n        }}\n      >\n        <Col\n          style={{\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            maxHeight: \"70vh\",\n            position: \"static\",\n          }}\n        >\n          <Column data={data} />\n        </Col>\n        <Col style={{ position: \"static\", height: \"12vh\" }}>\n          <div\n            style={linkStyle}\n            onMouseEnter={toggleHover}\n            onMouseLeave={toggleHover}\n          >\n            <AddButton\n              status={props.status === \"toapply\" ? \"to apply\" : props.status}\n            />\n          </div>\n        </Col>\n      </Col>\n    </Col>\n  );\n}\n\nexport default Heading;\n","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Navigations/AuthenticationNavigation.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/unauthenticated/unauthenticatedReducer.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/Authentication/AuthenticationReducer.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Home/LandingPage/LandingPage.tsx",["133"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport frame2 from \"./model_view.jpeg\";\nimport frame1 from \"./dashboard.jpeg\";\nimport { Row, Layout, Col, Button } from \"antd\";\nimport \"./index.css\";\n\nconst LandingPage = () => {\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      history.push(\"/dashboard\");\n    }\n  }, []);\n\n  const Handler2 = () => {\n    history.push(\"/login\");\n  };\n  const [hover, setHover] = useState(false);\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n  const { Content } = Layout;\n  let linkStyle;\n  if (hover) {\n    linkStyle = { transform: \"scale(1.3,1.3)\", backgroundColor: \"#1DA1F2\" };\n  } else linkStyle = { transform: \"scale(1,1)\", backgroundColor: \"#1DA1F2\" };\n  return (\n    <Layout style={{ backgroundColor: \"#162129\" }}>\n      <Content style={{ paddingRight: \"1em\" }}>\n        <Row\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n            width: \"100vw\",\n          }}\n        >\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              paddingTop: \"8vh\",\n            }}\n            span={12}\n            xs={22}\n            sm={22}\n            lg={12}\n          >\n            <Row style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Col span={24} className=\"glow\">\n                {\" \"}\n                Simplify Your Job Hunt!\n              </Col>\n              <Col\n                span={24}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  paddingTop: \"1em\",\n                }}\n              >\n                <h3\n                  style={{\n                    color: \"#A0A0A0\",\n                    fontSize: \"1.4em\",\n                    paddingLeft: \".4em\",\n                  }}\n                >\n                  Track your application progress in a seamless and intuitive\n                  way <b style={{ color: \"#7BC74D\" }}>✔</b>\n                </h3>\n              </Col>\n\n              <br></br>\n\n              <Col\n                span={24}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  paddingTop: \"2em\",\n                }}\n              >\n                <Button\n                  onClick={Handler2}\n                  style={linkStyle}\n                  onMouseEnter={toggleHover}\n                  onMouseLeave={toggleHover}\n                  size=\"large\"\n                  type=\"primary\"\n                  shape=\"round\"\n                >\n                  <strong> Sign up / Sign in</strong>\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            span={11}\n            sm={22}\n            xs={22}\n            lg={11}\n          >\n            <img className=\"image\" src={frame1} alt=\"landingimage\"></img>\n          </Col>\n        </Row>\n\n        <Row\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n            width: \"100vw\",\n          }}\n        >\n          <Col\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            span={11}\n            sm={22}\n            xs={22}\n            lg={11}\n          >\n            <img className=\"image\" src={frame2} alt=\"landingimage\"></img>\n          </Col>\n\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              paddingTop: \"3vh\",\n            }}\n            span={11}\n            xs={22}\n            sm={22}\n            lg={11}\n          >\n            <Row style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Col span={24} className=\"glow\">\n                {\" \"}\n                Create a Card For Each Application!\n              </Col>\n              <Col\n                span={24}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  paddingTop: \"1em\",\n                }}\n              >\n                <h3 style={{ color: \"#A0A0A0\", fontSize: \"1.4em\" }}>\n                  Application process is visualized like no spreadsheet can do{\" \"}\n                  <b style={{ color: \"#7BC74D\" }}>✔</b>\n                </h3>\n              </Col>\n\n              <br></br>\n\n              <Col\n                span={24}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  paddingTop: \"2em\",\n                  paddingBottom: \"1em\",\n                }}\n              >\n                <Button\n                  onClick={Handler2}\n                  style={linkStyle}\n                  onMouseEnter={toggleHover}\n                  onMouseLeave={toggleHover}\n                  size=\"large\"\n                  type=\"primary\"\n                  shape=\"round\"\n                >\n                  <strong>Sign up / Sign in</strong>\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default LandingPage;\n","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Column/Column.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Category/Category.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/AddButton/AddButton.tsx",["134","135"],"import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport ModalDetail from \"../Modal/Modal\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport btn from \"./button.svg\";\n\ninterface Props {\n  status: string;\n}\n\nconst AddButton = (props: Props) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"4vh\",\n        paddingTop: \"3em\",\n      }}\n    >\n      <Fab color=\"primary\" aria-label=\"add\" size=\"small\">\n        <AddIcon onClick={showModal} />\n      </Fab>\n      <Modal\n        title=\"Enter Details\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <ModalDetail status={props.status} notes={\"\"} update={false} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddButton;\n","/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Authentication/LoginForm.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Authentication/RegisterForm.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/unauthenticated/unauthenticatedTypes.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/Authentication/AuthenticationTypes.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/store/utility.ts",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Column/ColumnItem.tsx",[],"/home/pyromaniac/Desktop/projects/trackify-hidden/src/components/Dashboard/Modal/Modal.tsx",["136"],"import React from 'react';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport { Form, Input, Button, DatePicker, Select, Tag } from 'antd';\n\nconst { Option } = Select;\n\ninterface Props {\n    id? : number;\n    status? : string;\n    company? : string;\n    position? : string;\n    date? : string;\n    notes? : string;\n    update? : boolean;\n}\n\nconst DumbModal = ( props : Props ) => {\n\n    const [referesh, setRefresh ] = React.useState(undefined)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 20 },\n    };\n\n    const dateFormat = 'YYYY/MM/DD';\n\n    const onFinish = (values: any) => {\n        const date = moment(values.applied_date).format(\"YYYY-MM-DD\")\n        const token = localStorage.getItem(\"token\");\n\n        const bodyParameters = {\n          company : (values.company===undefined ? props.company : values.company),\n          role : (values.position === undefined ? props.position : values.position),\n          status : (values.status===undefined ? props.status : values.status),\n          notes : (values.notes===undefined ? props.notes : values.notes),\n          applied_date : date\n        }\n        const config = {\n            headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' },\n        };\n        if(props.update===false){\n            axios.post('/api/create',bodyParameters,config)\n              .then(res => {\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }else{\n            const updatedBody = {...bodyParameters, id : props.id }\n            axios.post('/api/update',updatedBody,config)\n              .then(res => {\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const onChange = (date : any, dateString : any ) =>{\n        console.log(date, dateString);\n    }\n\n    const handleChange = (value : string ) => {\n        console.log(`selected ${value}`);\n    }\n\n    return (\n        <Form\n            {...layout}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Company Name\"\n                name=\"company\"\n                rules={[{ required: !props.update, message: 'Please enter company!' }]}\n            >\n                <Input defaultValue={props.company}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Position\"\n                name=\"position\"\n                rules={[{ required: !props.update, message: 'Please enter position!' }]}\n            >\n                <Input defaultValue={props.position}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Extra Notes\"\n                name=\"notes\"\n            >\n                <Input.TextArea defaultValue={props.notes}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Date\"\n                name=\"applied_date\"\n            >\n                <DatePicker\n                    defaultValue={moment('2021/02/14',dateFormat)}\n                    onChange={onChange}\n                    format={dateFormat}\n                />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Status\"\n                name=\"status\"\n            >\n                <Select defaultValue={props.status} style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\"to apply\">\n                        <Tag color=\"gold\">\n                            To apply\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"applied\">\n                        <Tag color=\"blue\">\n                            Applied\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"ongoing\">\n                        <Tag color=\"magenta\">\n                            On going\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"rejected\">\n                        <Tag color=\"red\">\n                            Rejected\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"offer\">\n                        <Tag color=\"green\">\n                            Offer\n                        </Tag>\n                    </Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item>\n                <Button htmlType=\"submit\" onClick={() => setRefresh(undefined)}>Apply</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DumbModal\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":80,"column":15,"nodeType":"143","endLine":85,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":90,"column":15,"nodeType":"143","endLine":93,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":24,"column":10,"nodeType":"146","messageId":"147","endLine":24,"endColumn":14},{"ruleId":"144","severity":1,"message":"148","line":24,"column":16,"nodeType":"146","messageId":"147","endLine":24,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":139,"column":21,"nodeType":"143","endLine":142,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":143,"column":23,"nodeType":"143","endLine":143,"endColumn":59},{"ruleId":"141","severity":1,"message":"142","line":147,"column":21,"nodeType":"143","endLine":150,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":151,"column":23,"nodeType":"143","endLine":151,"endColumn":61},{"ruleId":"141","severity":1,"message":"142","line":155,"column":21,"nodeType":"143","endLine":158,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":159,"column":23,"nodeType":"143","endLine":159,"endColumn":61},{"ruleId":"141","severity":1,"message":"142","line":200,"column":21,"nodeType":"143","endLine":200,"endColumn":77},{"ruleId":"149","severity":1,"message":"150","line":201,"column":23,"nodeType":"143","endLine":201,"endColumn":59},{"ruleId":"141","severity":1,"message":"142","line":205,"column":21,"nodeType":"143","endLine":210,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":211,"column":23,"nodeType":"143","endLine":211,"endColumn":61},{"ruleId":"141","severity":1,"message":"142","line":215,"column":21,"nodeType":"143","endLine":218,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":219,"column":23,"nodeType":"143","endLine":219,"endColumn":63},{"ruleId":"144","severity":1,"message":"151","line":3,"column":15,"nodeType":"146","messageId":"147","endLine":3,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":32,"column":6,"nodeType":"154","endLine":32,"endColumn":8,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"156","line":14,"column":6,"nodeType":"154","endLine":14,"endColumn":8,"suggestions":"157"},{"ruleId":"144","severity":1,"message":"151","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":11},{"ruleId":"144","severity":1,"message":"159","line":20,"column":12,"nodeType":"146","messageId":"147","endLine":20,"endColumn":20},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","@typescript-eslint/no-unused-vars","'show' is assigned a value but never used.","Identifier","unusedVar","'setShow' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.status'. Either include it or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["163"],"'btn' is defined but never used.","'referesh' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [props.status]",{"range":"168","text":"169"},"Update the dependencies array to be: [history]",{"range":"170","text":"171"},[788,790],"[props.status]",[416,418],"[history]"]