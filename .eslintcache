[{"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\index.tsx":"1","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\reportWebVitals.ts":"2","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\App.tsx":"3","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\store.ts":"4","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Dashboard.tsx":"5","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Navbar\\Navbar.tsx":"6","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Login\\Login.tsx":"7","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\Contact\\Contact.tsx":"8","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\About\\About.tsx":"9","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\rootReducer.ts":"10","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\index.tsx":"11","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Navigations\\AuthenticationNavigation.tsx":"12","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Section\\Heading.tsx":"13","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\unauthenticated\\unauthenticatedReducer.ts":"14","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\Authentication\\AuthenticationReducer.ts":"15","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\LandingPage\\LandingPage.tsx":"16","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Authentication\\LoginForm.tsx":"17","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Authentication\\RegisterForm.tsx":"18","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Column\\Column.tsx":"19","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\AddButton\\AddButton.tsx":"20","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Category\\Category.tsx":"21","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\unauthenticated\\unauthenticatedTypes.ts":"22","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\Authentication\\AuthenticationTypes.ts":"23","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\utility.ts":"24","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Column\\ColumnItem.tsx":"25","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Modal\\Modal.tsx":"26"},{"size":500,"mtime":1615230716000,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1615230716000,"results":"29","hashOfConfig":"28"},{"size":1163,"mtime":1615230716000,"results":"30","hashOfConfig":"28"},{"size":215,"mtime":1615230716000,"results":"31","hashOfConfig":"28"},{"size":596,"mtime":1615230716000,"results":"32","hashOfConfig":"28"},{"size":3349,"mtime":1615230716000,"results":"33","hashOfConfig":"28"},{"size":503,"mtime":1615230716000,"results":"34","hashOfConfig":"28"},{"size":940,"mtime":1616922182165,"results":"35","hashOfConfig":"28"},{"size":7693,"mtime":1616921799246,"results":"36","hashOfConfig":"28"},{"size":356,"mtime":1615230716000,"results":"37","hashOfConfig":"28"},{"size":234,"mtime":1615230716000,"results":"38","hashOfConfig":"28"},{"size":1710,"mtime":1615230716000,"results":"39","hashOfConfig":"28"},{"size":2026,"mtime":1615230716000,"results":"40","hashOfConfig":"28"},{"size":444,"mtime":1615230716000,"results":"41","hashOfConfig":"28"},{"size":1258,"mtime":1615230716000,"results":"42","hashOfConfig":"28"},{"size":5815,"mtime":1616922441554,"results":"43","hashOfConfig":"28"},{"size":2678,"mtime":1616839622235,"results":"44","hashOfConfig":"28"},{"size":3094,"mtime":1616839735683,"results":"45","hashOfConfig":"28"},{"size":470,"mtime":1615230716000,"results":"46","hashOfConfig":"28"},{"size":1148,"mtime":1615230716000,"results":"47","hashOfConfig":"28"},{"size":521,"mtime":1615230716000,"results":"48","hashOfConfig":"28"},{"size":67,"mtime":1615230716000,"results":"49","hashOfConfig":"28"},{"size":164,"mtime":1615230716000,"results":"50","hashOfConfig":"28"},{"size":139,"mtime":1615230716000,"results":"51","hashOfConfig":"28"},{"size":1677,"mtime":1615230716000,"results":"52","hashOfConfig":"28"},{"size":4754,"mtime":1615230716000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"7hl1cb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\index.tsx",[],["113","114"],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\reportWebVitals.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\App.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\store.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Dashboard.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Navbar\\Navbar.tsx",["115","116"],"import React, { useState } from \"react\";\r\nimport { Menu, Drawer, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport { UnorderedListOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport logo from \"./logo.png\";\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory();\r\n\r\n  const Handler1 = () => {\r\n    history.push(\"/about\");\r\n  };\r\n  const Handler2 = () => {\r\n    history.push(\"/contact\");\r\n  };\r\n  const [visible, setVisible] = useState(false);\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ width: \"100%\" }}>\r\n      <Menu\r\n        style={{\r\n          width: \"100%\",\r\n          position: \"fixed\",\r\n          zIndex: 1,\r\n          display: \"flex\",\r\n          fontFamily: \"'Cinzel', serif\",\r\n          height: \"10vh\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#0D1117\",\r\n        }}\r\n        mode=\"horizontal\"\r\n      >\r\n        <Menu.Item\r\n          onClick={() => history.push(\"/\")}\r\n          key=\"mail\"\r\n          style={{ fontSize: \"2em\" }}\r\n        >\r\n          <img style={{ paddingRight: \".5em\" }} src={logo} alt=\"logo\"></img>\r\n          <b style={{}}>Trackify</b>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <UnorderedListOutlined\r\n            style={{ fontSize: \"2em\" }}\r\n            onClick={showDrawer}\r\n          />\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Drawer\r\n        title=\"🍳\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n      >\r\n        <Menu style={{ backgroundColor: \"transparent\" }}>\r\n          <Menu.Item key=\"1\" style={{ fontSize: \"1.3em\" }} onClick={Handler1}>\r\n            About Us\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" style={{ fontSize: \"1.3em\" }} onClick={Handler2}>\r\n            Contact US\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <hr></hr>\r\n          </Menu.Item>\r\n          <Menu.ItemGroup title=\"Team\">\r\n            <Menu.Item key=\"3\" style={{ fontSize: \"1.3em\" }}>\r\n              <a\r\n                href={\r\n                  \"https://www.linkedin.com/in/saifur-rehman-khan-5770a9172/\"\r\n                }\r\n                target={\"_blank\"}\r\n              >\r\n                Saifur Rehman\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" style={{ fontSize: \"1.3em\" }}>\r\n              <a\r\n                href={\"https://www.linkedin.com/in/nihal-ahmad-46042a192\"}\r\n                target={\"_blank\"}\r\n              >\r\n                Nihal Ahmad\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <hr></hr>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\" style={{ fontSize: \"1.3em\" }}>\r\n              {localStorage.getItem(\"token\") ? (\r\n                <Button type=\"ghost\" htmlType=\"submit\" onClick={handleLogout}>\r\n                  Logout <LogoutOutlined />\r\n                </Button>\r\n              ) : (\r\n                <hr />\r\n              )}\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu>\r\n      </Drawer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\Contact\\Contact.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\About\\About.tsx",["117","118","119","120","121","122","123","124","125","126","127","128"],"import React from \"react\";\r\nimport \"./index.css\";\r\nimport { Row, Col, Layout, Card } from \"antd\";\r\nimport nihal from \"./nihal-ahmad.jpeg\";\r\nimport saifur from \"./saifur-rehman.jpg\";\r\nimport github from \"./github-logo.svg\";\r\nimport linkedin from \"./linkedin.svg\";\r\nimport codechef from \"./codechef.jpg\";\r\nimport codeforces from \"./codeforces.png\";\r\n\r\nfunction About() {\r\n  const { Content } = Layout;\r\n  const { Meta } = Card;\r\n\r\n  return (\r\n    <>\r\n      <Layout\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#162129\",\r\n        }}\r\n      >\r\n        <Content\r\n          style={{\r\n            paddingTop: \"12vh\",\r\n            paddingRight: \".8em\",\r\n            paddingLeft: \".8em\",\r\n          }}\r\n        >\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <b\r\n              style={{\r\n                fontSize: \"1.8em\",\r\n                color: \"#3690CC\",\r\n              }}\r\n            >\r\n              👍Intro\r\n            </b>\r\n          </Row>\r\n          <br />\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Row style={{ fontSize: \"2em\" }}>\r\n              We went through the job application process ourselves and we were\r\n              not so happy about it.\r\n            </Row>\r\n          </Row>\r\n          <br />\r\n          <Row className=\"row\">\r\n            👀 Messy spreadsheets, lost emails, lack of information.\r\n          </Row>\r\n          <br />\r\n          <Row className=\"row\">\r\n            👀 We decided to make a job search simple and data-driven and career\r\n            advising efficient.\r\n          </Row>\r\n          <br />\r\n          <Row className=\"row\">\r\n            <span>\r\n              👀 In a nutshell,<strong className=\"bold\">Trackify</strong> as a\r\n              platform,simplifies and manages a student's dream to land jobs.\r\n            </span>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <b\r\n              style={{\r\n                fontSize: \"1.8em\",\r\n                color: \"#3690CC\",\r\n              }}\r\n            >\r\n              👍Our Team\r\n            </b>\r\n          </Row>\r\n          <br />\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              // alignItems: \"center\"\r\n            }}\r\n          >\r\n            <Col\r\n              xs={22}\r\n              sm={22}\r\n              lg={12}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginBottom: \"3em\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Card\r\n                  style={{\r\n                    width: 350,\r\n                    borderRadius: \"4em\",\r\n                    marginBottom: \"1em\",\r\n                  }}\r\n                  cover={\r\n                    <img\r\n                      alt=\"example\"\r\n                      src={nihal}\r\n                      style={{ borderRadius: \"4em\" }}\r\n                    />\r\n                  }\r\n                  hoverable={true}\r\n                >\r\n                  <Meta\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    title=\"Nihal Ahmad | Software Developer\"\r\n                    description=\"I am a Software Developer, ECE student and Competitive Programmer.\r\n      I designed and implemented the frontend of this (Trackify) app from a Button hover to handling HTTP requests. \r\n      I have keen interest in software development and ready to adapt to new technologies.\r\n      \"\r\n                  />\r\n                </Card>\r\n                <Row style={{ paddingLeft: \"8em\", alignItems: \"center\" }}>\r\n                  <span style={{ marginRight: \"1em\" }}>\r\n                    <a\r\n                      href={\"https://github.com/nihal-ahmad\"}\r\n                      target={\"_blank\"}\r\n                    >\r\n                      <img src={github} className=\"img\" />\r\n                    </a>\r\n                  </span>\r\n                  <span style={{ marginRight: \"1em\" }}>\r\n                    <a\r\n                      href={\"https://www.linkedin.com/in/nihal-ahmad-46042a192\"}\r\n                      target={\"_blank\"}\r\n                    >\r\n                      <img src={linkedin} className=\"img\" />\r\n                    </a>\r\n                  </span>\r\n                  <span style={{ marginRight: \"1em\" }}>\r\n                    <a\r\n                      href={\"https://www.codechef.com/users/pyromaniac007\"}\r\n                      target={\"_blank\"}\r\n                    >\r\n                      <img src={codechef} className=\"img\" />\r\n                    </a>\r\n                  </span>\r\n                </Row>\r\n              </Row>\r\n            </Col>\r\n            <Col\r\n              xs={22}\r\n              sm={22}\r\n              lg={12}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginBottom: \"3em\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Card\r\n                  style={{\r\n                    width: 350,\r\n                    borderRadius: \"4em\",\r\n                    marginBottom: \"1em\",\r\n                  }}\r\n                  cover={\r\n                    <img\r\n                      alt=\"example\"\r\n                      src={saifur}\r\n                      style={{ borderRadius: \"4em\" }}\r\n                    />\r\n                  }\r\n                  hoverable={true}\r\n                >\r\n                  <Meta\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    title=\"Saifur Rahman | Full Stack Developer\"\r\n                    description=\"I'm a Full Stack Developer, CS student and Competitive Programmer. I designed and implemented the backend of this (Trackify) app including Authentication, Database Design, Deployment, etc.\r\n                    Interested in Backend Architecture and designing scablable systems.\"\r\n                  />\r\n                </Card>\r\n                <Row style={{ paddingLeft: \"8em\", alignItems: \"center\" }}>\r\n                  <span style={{ marginRight: \"1em\" }}>\r\n                    <a href={\"https://github.com/Saifu0\"} target={\"_blank\"}>\r\n                      <img src={github} className=\"img\" />\r\n                    </a>\r\n                  </span>\r\n                  <span style={{ marginRight: \"1em\" }}>\r\n                    <a\r\n                      href={\r\n                        \"https://www.linkedin.com/in/saifur-rehman-khan-5770a9172/\"\r\n                      }\r\n                      target={\"_blank\"}\r\n                    >\r\n                      <img src={linkedin} className=\"img\" />\r\n                    </a>\r\n                  </span>\r\n                  <span style={{ marginRight: \"1em\" }}>\r\n                    <a\r\n                      href={\"https://codeforces.com/profile/.Pain.\"}\r\n                      target={\"_blank\"}\r\n                    >\r\n                      <img src={codeforces} className=\"img\" />\r\n                    </a>\r\n                  </span>\r\n                </Row>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\rootReducer.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\index.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Navigations\\AuthenticationNavigation.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Section\\Heading.tsx",["129","130"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Col, Button } from \"antd\";\nimport Column from \"../Column/Column\";\nimport Category from \"../Category/Category\";\nimport AddButton from \"../AddButton/AddButton\";\n\ninterface Props {\n  color: string;\n  text: string;\n  status: string;\n}\nfunction Heading(props: Props) {\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    axios\n      .get(`/api/${props.status}`, config)\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }, []);\n  const [hover, setHover] = useState(false);\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n  let linkStyle;\n  if (hover) {\n    linkStyle = { transform: \"scale(1.3,1.3)\" };\n  } else linkStyle = { transform: \"scale(1,1)\" };\n  return (\n    <Col\n      span={\"20%\"}\n      style={{ height: \"88vh\", alignItems: \"center\", marginTop: \"12vh\" }}\n    >\n      <Category color={props.color} text={props.text} />\n      <Col\n        style={{\n          overflowY: \"auto\",\n          overflowX: \"hidden\",\n          height: \"82vh\",\n          maxHeight: \"82vh\",\n          position: \"relative\",\n        }}\n      >\n        <Col\n          style={{\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            maxHeight: \"70vh\",\n            position: \"static\",\n          }}\n        >\n          <Column data={data} />\n        </Col>\n        <Col style={{ position: \"static\", height: \"12vh\" }}>\n          <div\n            style={linkStyle}\n            onMouseEnter={toggleHover}\n            onMouseLeave={toggleHover}\n          >\n            <AddButton\n              status={props.status === \"toapply\" ? \"to apply\" : props.status}\n            />\n          </div>\n        </Col>\n      </Col>\n    </Col>\n  );\n}\n\nexport default Heading;\n","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\unauthenticated\\unauthenticatedReducer.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\Authentication\\AuthenticationReducer.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Home\\LandingPage\\LandingPage.tsx",["131"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport frame2 from \"./model_view.jpeg\";\r\nimport frame1 from \"./dashboard.jpeg\";\r\nimport { Row, Layout, Col, Button } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst LandingPage = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const Handler2 = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const [hover, setHover] = useState(false);\r\n  const toggleHover = () => {\r\n    setHover(!hover);\r\n  };\r\n  const { Content } = Layout;\r\n  let linkStyle;\r\n  if (hover) {\r\n    linkStyle = { transform: \"scale(1.3,1.3)\", backgroundColor: \"#1DA1F2\" };\r\n  } else linkStyle = { transform: \"scale(1,1)\", backgroundColor: \"#1DA1F2\" };\r\n  return (\r\n    <Layout style={{ backgroundColor: \"#162129\" }}>\r\n      <Content style={{ paddingRight: \"1em\" }}>\r\n        <Row\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"100vh\",\r\n            width: \"100vw\",\r\n          }}\r\n        >\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"8vh\",\r\n            }}\r\n            span={12}\r\n            xs={22}\r\n            sm={22}\r\n            lg={12}\r\n          >\r\n            <Row style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Col span={24} className=\"glow\">\r\n                {\" \"}\r\n                Simplify Your Job Hunt!\r\n              </Col>\r\n              <Col\r\n                span={24}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  paddingTop: \"1em\",\r\n                }}\r\n              >\r\n                <h3\r\n                  style={{\r\n                    color: \"#A0A0A0\",\r\n                    fontSize: \"1.4em\",\r\n                    paddingLeft: \".4em\",\r\n                  }}\r\n                >\r\n                  Track your application progress in a seamless and intuitive\r\n                  way <b style={{ color: \"#7BC74D\" }}>✔</b>\r\n                </h3>\r\n              </Col>\r\n\r\n              <br></br>\r\n\r\n              <Col\r\n                span={24}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  paddingTop: \"2em\",\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={Handler2}\r\n                  style={linkStyle}\r\n                  onMouseEnter={toggleHover}\r\n                  onMouseLeave={toggleHover}\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                >\r\n                  <strong> Sign up / Sign in</strong>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            span={11}\r\n            sm={22}\r\n            xs={22}\r\n            lg={11}\r\n          >\r\n            <img className=\"image\" src={frame1} alt=\"landingimage\"></img>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"100vh\",\r\n            width: \"100vw\",\r\n          }}\r\n        >\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            span={11}\r\n            sm={22}\r\n            xs={22}\r\n            lg={11}\r\n          >\r\n            <img className=\"image\" src={frame2} alt=\"landingimage\"></img>\r\n          </Col>\r\n\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"3vh\",\r\n            }}\r\n            span={11}\r\n            xs={22}\r\n            sm={22}\r\n            lg={11}\r\n          >\r\n            <Row style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Col span={24} className=\"glow\">\r\n                {\" \"}\r\n                Create a Card For Each Application!\r\n              </Col>\r\n              <Col\r\n                span={24}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  paddingTop: \"1em\",\r\n                }}\r\n              >\r\n                <h3 style={{ color: \"#A0A0A0\", fontSize: \"1.4em\" }}>\r\n                  Application process is visualized like no spreadsheet can do{\" \"}\r\n                  <b style={{ color: \"#7BC74D\" }}>✔</b>\r\n                </h3>\r\n              </Col>\r\n\r\n              <br></br>\r\n\r\n              <Col\r\n                span={24}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  paddingTop: \"2em\",\r\n                  paddingBottom: \"1em\",\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={Handler2}\r\n                  style={linkStyle}\r\n                  onMouseEnter={toggleHover}\r\n                  onMouseLeave={toggleHover}\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                >\r\n                  <strong>Sign up / Sign in</strong>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Authentication\\LoginForm.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Authentication\\RegisterForm.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Column\\Column.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\AddButton\\AddButton.tsx",["132","133"],"import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport ModalDetail from \"../Modal/Modal\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport btn from \"./button.svg\";\n\ninterface Props {\n  status: string;\n}\n\nconst AddButton = (props: Props) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"4vh\",\n        paddingTop: \"3em\",\n      }}\n    >\n      <Fab color=\"primary\" aria-label=\"add\" size=\"small\">\n        <AddIcon onClick={showModal} />\n      </Fab>\n      <Modal\n        title=\"Enter Details\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <ModalDetail status={props.status} notes={\"\"} update={false} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddButton;\n","C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Category\\Category.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\unauthenticated\\unauthenticatedTypes.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\Authentication\\AuthenticationTypes.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\store\\utility.ts",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Column\\ColumnItem.tsx",[],"C:\\Users\\Msaleemknr\\Desktop\\trackify-hidden-main\\trackify-hidden-main\\src\\components\\Dashboard\\Modal\\Modal.tsx",["134"],"import React from 'react';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport { Form, Input, Button, DatePicker, Select, Tag } from 'antd';\n\nconst { Option } = Select;\n\ninterface Props {\n    id? : number;\n    status? : string;\n    company? : string;\n    position? : string;\n    date? : string;\n    notes? : string;\n    update? : boolean;\n}\n\nconst DumbModal = ( props : Props ) => {\n\n    const [referesh, setRefresh ] = React.useState(undefined)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 20 },\n    };\n\n    const dateFormat = 'YYYY/MM/DD';\n\n    const onFinish = (values: any) => {\n        const date = moment(values.applied_date).format(\"YYYY-MM-DD\")\n        const token = localStorage.getItem(\"token\");\n\n        const bodyParameters = {\n          company : (values.company===undefined ? props.company : values.company),\n          role : (values.position === undefined ? props.position : values.position),\n          status : (values.status===undefined ? props.status : values.status),\n          notes : (values.notes===undefined ? props.notes : values.notes),\n          applied_date : date\n        }\n        const config = {\n            headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' },\n        };\n        if(props.update===false){\n            axios.post('/api/create',bodyParameters,config)\n              .then(res => {\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }else{\n            const updatedBody = {...bodyParameters, id : props.id }\n            axios.post('/api/update',updatedBody,config)\n              .then(res => {\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const onChange = (date : any, dateString : any ) =>{\n        console.log(date, dateString);\n    }\n\n    const handleChange = (value : string ) => {\n        console.log(`selected ${value}`);\n    }\n\n    return (\n        <Form\n            {...layout}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Company Name\"\n                name=\"company\"\n                rules={[{ required: !props.update, message: 'Please enter company!' }]}\n            >\n                <Input defaultValue={props.company}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Position\"\n                name=\"position\"\n                rules={[{ required: !props.update, message: 'Please enter position!' }]}\n            >\n                <Input defaultValue={props.position}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Extra Notes\"\n                name=\"notes\"\n            >\n                <Input.TextArea defaultValue={props.notes}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Date\"\n                name=\"applied_date\"\n            >\n                <DatePicker\n                    defaultValue={moment('2021/02/14',dateFormat)}\n                    onChange={onChange}\n                    format={dateFormat}\n                />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Status\"\n                name=\"status\"\n            >\n                <Select defaultValue={props.status} style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\"to apply\">\n                        <Tag color=\"gold\">\n                            To apply\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"applied\">\n                        <Tag color=\"blue\">\n                            Applied\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"ongoing\">\n                        <Tag color=\"magenta\">\n                            On going\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"rejected\">\n                        <Tag color=\"red\">\n                            Rejected\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"offer\">\n                        <Tag color=\"green\">\n                            Offer\n                        </Tag>\n                    </Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item>\n                <Button htmlType=\"submit\" onClick={() => setRefresh(undefined)}>Apply</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DumbModal\n",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":80,"column":15,"nodeType":"141","endLine":85,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":90,"column":15,"nodeType":"141","endLine":93,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":139,"column":21,"nodeType":"141","endLine":142,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":143,"column":23,"nodeType":"141","endLine":143,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":147,"column":21,"nodeType":"141","endLine":150,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":151,"column":23,"nodeType":"141","endLine":151,"endColumn":61},{"ruleId":"139","severity":1,"message":"140","line":155,"column":21,"nodeType":"141","endLine":158,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":159,"column":23,"nodeType":"141","endLine":159,"endColumn":61},{"ruleId":"139","severity":1,"message":"140","line":200,"column":21,"nodeType":"141","endLine":200,"endColumn":77},{"ruleId":"142","severity":1,"message":"143","line":201,"column":23,"nodeType":"141","endLine":201,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":205,"column":21,"nodeType":"141","endLine":210,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":211,"column":23,"nodeType":"141","endLine":211,"endColumn":61},{"ruleId":"139","severity":1,"message":"140","line":215,"column":21,"nodeType":"141","endLine":218,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":219,"column":23,"nodeType":"141","endLine":219,"endColumn":63},{"ruleId":"144","severity":1,"message":"145","line":3,"column":15,"nodeType":"146","messageId":"147","endLine":3,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":32,"column":6,"nodeType":"150","endLine":32,"endColumn":8,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":14,"column":6,"nodeType":"150","endLine":14,"endColumn":8,"suggestions":"153"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":23},{"ruleId":"144","severity":1,"message":"154","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":11},{"ruleId":"144","severity":1,"message":"155","line":20,"column":12,"nodeType":"146","messageId":"147","endLine":20,"endColumn":20},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.status'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["159"],"'btn' is defined but never used.","'referesh' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [props.status]",{"range":"164","text":"165"},"Update the dependencies array to be: [history]",{"range":"166","text":"167"},[788,790],"[props.status]",[429,431],"[history]"]