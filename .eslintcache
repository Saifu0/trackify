[{"/home/saifu/Documents/Trackify/src/index.tsx":"1","/home/saifu/Documents/Trackify/src/store/store.ts":"2","/home/saifu/Documents/Trackify/src/components/Dashboard/Category/Category.tsx":"3","/home/saifu/Documents/Trackify/src/components/Dashboard/Modal/Modal.tsx":"4","/home/saifu/Documents/Trackify/src/components/Navigations/AuthenticationNavigation.tsx":"5","/home/saifu/Documents/Trackify/src/components/Home/index.tsx":"6","/home/saifu/Documents/Trackify/src/components/Dashboard/Section/Heading.tsx":"7","/home/saifu/Documents/Trackify/src/components/Home/LandingPage/LandingPage.tsx":"8","/home/saifu/Documents/Trackify/src/store/utility.ts":"9","/home/saifu/Documents/Trackify/src/components/Authentication/LoginForm.tsx":"10","/home/saifu/Documents/Trackify/src/components/Navbar/Navbar.tsx":"11","/home/saifu/Documents/Trackify/src/App.tsx":"12","/home/saifu/Documents/Trackify/src/components/Authentication/RegisterForm.tsx":"13","/home/saifu/Documents/Trackify/src/components/Dashboard/Column/Column.tsx":"14","/home/saifu/Documents/Trackify/src/components/Dashboard/Dashboard.tsx":"15","/home/saifu/Documents/Trackify/src/components/Dashboard/Column/ColumnItem.tsx":"16","/home/saifu/Documents/Trackify/src/components/Login/Login.tsx":"17","/home/saifu/Documents/Trackify/src/store/Authentication/AuthenticationReducer.ts":"18","/home/saifu/Documents/Trackify/src/components/Dashboard/AddButton/AddButton.tsx":"19"},{"size":500,"mtime":1613448963946,"results":"20","hashOfConfig":"21"},{"size":215,"mtime":1614358566812,"results":"22","hashOfConfig":"21"},{"size":447,"mtime":1613448963942,"results":"23","hashOfConfig":"21"},{"size":4754,"mtime":1614512394077,"results":"24","hashOfConfig":"21"},{"size":1710,"mtime":1613448963946,"results":"25","hashOfConfig":"21"},{"size":234,"mtime":1613448963946,"results":"26","hashOfConfig":"21"},{"size":1216,"mtime":1614511840571,"results":"27","hashOfConfig":"21"},{"size":3289,"mtime":1614768181945,"results":"28","hashOfConfig":"21"},{"size":139,"mtime":1614357468109,"results":"29","hashOfConfig":"21"},{"size":2395,"mtime":1614502973642,"results":"30","hashOfConfig":"21"},{"size":3290,"mtime":1614765086020,"results":"31","hashOfConfig":"21"},{"size":1144,"mtime":1614513019349,"results":"32","hashOfConfig":"21"},{"size":2788,"mtime":1614511860303,"results":"33","hashOfConfig":"21"},{"size":512,"mtime":1614766088593,"results":"34","hashOfConfig":"21"},{"size":615,"mtime":1614511904392,"results":"35","hashOfConfig":"21"},{"size":1728,"mtime":1614766469886,"results":"36","hashOfConfig":"21"},{"size":536,"mtime":1613448963946,"results":"37","hashOfConfig":"21"},{"size":1258,"mtime":1614358081311,"results":"38","hashOfConfig":"21"},{"size":1290,"mtime":1614765633829,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qdewc1",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/saifu/Documents/Trackify/src/index.tsx",[],"/home/saifu/Documents/Trackify/src/store/store.ts",[],["83","84"],"/home/saifu/Documents/Trackify/src/components/Dashboard/Category/Category.tsx",[],["85","86"],"/home/saifu/Documents/Trackify/src/components/Dashboard/Modal/Modal.tsx",["87"],"import React from 'react';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport { Form, Input, Button, DatePicker, Select, Tag } from 'antd';\n\nconst { Option } = Select;\n\ninterface Props {\n    id? : number;\n    status? : string;\n    company? : string;\n    position? : string;\n    date? : string;\n    notes? : string;\n    update? : boolean;\n}\n\nconst DumbModal = ( props : Props ) => {\n\n    const [referesh, setRefresh ] = React.useState(undefined)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 20 },\n    };\n\n    const dateFormat = 'YYYY/MM/DD';\n\n    const onFinish = (values: any) => {\n        const date = moment(values.applied_date).format(\"YYYY-MM-DD\")\n        const token = localStorage.getItem(\"token\");\n\n        const bodyParameters = {\n          company : (values.company===undefined ? props.company : values.company),\n          role : (values.position === undefined ? props.position : values.position),\n          status : (values.status===undefined ? props.status : values.status),\n          notes : (values.notes===undefined ? props.notes : values.notes),\n          applied_date : date\n        }\n        const config = {\n            headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' },\n        };\n        if(props.update===false){\n            axios.post('/api/create',bodyParameters,config)\n              .then(res => {\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }else{\n            const updatedBody = {...bodyParameters, id : props.id }\n            axios.post('/api/update',updatedBody,config)\n              .then(res => {\n                window.location.reload();\n              })\n              .catch(err => {\n                console.log(err.message)\n              })\n        }\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const onChange = (date : any, dateString : any ) =>{\n        console.log(date, dateString);\n    }\n\n    const handleChange = (value : string ) => {\n        console.log(`selected ${value}`);\n    }\n\n    return (\n        <Form\n            {...layout}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Company Name\"\n                name=\"company\"\n                rules={[{ required: !props.update, message: 'Please enter company!' }]}\n            >\n                <Input defaultValue={props.company}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Position\"\n                name=\"position\"\n                rules={[{ required: !props.update, message: 'Please enter position!' }]}\n            >\n                <Input defaultValue={props.position}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Extra Notes\"\n                name=\"notes\"\n            >\n                <Input.TextArea defaultValue={props.notes}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Date\"\n                name=\"applied_date\"\n            >\n                <DatePicker\n                    defaultValue={moment('2021/02/14',dateFormat)}\n                    onChange={onChange}\n                    format={dateFormat}\n                />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Status\"\n                name=\"status\"\n            >\n                <Select defaultValue={props.status} style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\"to apply\">\n                        <Tag color=\"gold\">\n                            To apply\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"applied\">\n                        <Tag color=\"blue\">\n                            Applied\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"ongoing\">\n                        <Tag color=\"magenta\">\n                            On going\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"rejected\">\n                        <Tag color=\"red\">\n                            Rejected\n                        </Tag>\n                    </Option>\n\n                    <Option value=\"offer\">\n                        <Tag color=\"green\">\n                            Offer\n                        </Tag>\n                    </Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item>\n                <Button htmlType=\"submit\" onClick={() => setRefresh(undefined)}>Apply</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DumbModal\n","/home/saifu/Documents/Trackify/src/components/Navigations/AuthenticationNavigation.tsx",[],["88","89"],"/home/saifu/Documents/Trackify/src/components/Home/index.tsx",[],"/home/saifu/Documents/Trackify/src/components/Dashboard/Section/Heading.tsx",["90"],"/home/saifu/Documents/Trackify/src/components/Home/LandingPage/LandingPage.tsx",["91"],"/home/saifu/Documents/Trackify/src/store/utility.ts",[],"/home/saifu/Documents/Trackify/src/components/Authentication/LoginForm.tsx",[],"/home/saifu/Documents/Trackify/src/components/Navbar/Navbar.tsx",["92","93"],"/home/saifu/Documents/Trackify/src/App.tsx",[],"/home/saifu/Documents/Trackify/src/components/Authentication/RegisterForm.tsx",["94"],"/home/saifu/Documents/Trackify/src/components/Dashboard/Column/Column.tsx",[],"/home/saifu/Documents/Trackify/src/components/Dashboard/Dashboard.tsx",[],"/home/saifu/Documents/Trackify/src/components/Dashboard/Column/ColumnItem.tsx",[],"/home/saifu/Documents/Trackify/src/components/Login/Login.tsx",[],["95","96"],"/home/saifu/Documents/Trackify/src/store/Authentication/AuthenticationReducer.ts",[],"/home/saifu/Documents/Trackify/src/components/Dashboard/AddButton/AddButton.tsx",["97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":20,"column":12,"nodeType":"106","messageId":"107","endLine":20,"endColumn":20},{"ruleId":"98","replacedBy":"108"},{"ruleId":"100","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":29,"column":7,"nodeType":"112","endLine":29,"endColumn":9,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":15,"column":9,"nodeType":"112","endLine":15,"endColumn":11,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":87,"column":17,"nodeType":"118","endLine":87,"endColumn":34},{"ruleId":"116","severity":1,"message":"117","line":95,"column":17,"nodeType":"118","endLine":95,"endColumn":34},{"ruleId":"104","severity":1,"message":"119","line":4,"column":31,"nodeType":"106","messageId":"107","endLine":4,"endColumn":39},{"ruleId":"98","replacedBy":"120"},{"ruleId":"100","replacedBy":"121"},{"ruleId":"104","severity":1,"message":"122","line":2,"column":16,"nodeType":"106","messageId":"107","endLine":2,"endColumn":22},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"@typescript-eslint/no-unused-vars","'referesh' is assigned a value but never used.","Identifier","unusedVar",["123"],["124"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.status'. Either include it or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["126"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Checkbox' is defined but never used.",["123"],["124"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [props.status]",{"range":"131","text":"132"},"Update the dependencies array to be: [history]",{"range":"133","text":"134"},[788,790],"[props.status]",[431,433],"[history]"]